import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { fontSans } from "@/lib/font";
import type { Viewport } from "next";
import { ThemeProvider } from "@/components/theme-provider";
import { Toaster } from "sonner";
import { QueryProvider } from "@/providers/QueryProvider";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

export const metadata: Metadata = {
  title: "React Templates",
  description: "Generated by Collinz dev",
};
const degular = localFont({
  src: "./fonts/DegularDisplay-Semibold.otf",
  variable: "--font-degular",              
  weight: "400",                           
});
export const viewport: Viewport = {
  colorScheme: "dark",
  themeColor: [
    { media: "(prefers-color-scheme: light)", color: "white" },
    { media: "(prefers-color-scheme: dark)", color: "#000000" },
  ],
};
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning className="dark">
      <body
        className={` ${degular.variable} ${fontSans.variable} antialiased  relative dark:bg-[#000000] font-[family-name:var(--font-geist-sans)] `}
      >
      <QueryProvider>
      <ThemeProvider 
           attribute="class" 
            defaultTheme="dark" 
            enableSystem={false}
            // forcedTheme="dark"
      >
        {children}
        <Toaster position="bottom-right" />
       </ThemeProvider>
      </QueryProvider>
      
      </body>
    </html>
  );
}
